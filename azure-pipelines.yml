schedules:
# - cron: "0 7 1/14 * *" # At 07:00 AM, every 14 days (https://cronexpressiondescriptor.azurewebsites.net/)
- cron: '0 14 * * *'
  displayName: Update schedule
  always: true
  branches:
    include:
     - master

# no CI trigger
trigger: none

# no PR builds
pr: none

jobs:

- job: serverfiles_update
  pool:
    vmImage: 'macOS-10.14'
  strategy:
    matrix:
      Python37:
        python.version: '3.7'

  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
        architecture: 'x64'

    - script: python -m pip install --upgrade pip setuptools wheel numpy
      displayName: 'Install build tools'

    - script: |
        brew install hub
        python -m pip install --upgrade pip pyqt5 orange3 plumbum serverfiles sqlite_utils https://github.com/jakakokosar/orange3-bioinformatics/archive/overhaul_gene_module.zip
      displayName: 'Install requirements'

    - task: DownloadSecureFile@1
      name: deploy_key
      inputs:
        secureFile: deploy_key
      displayName: 'Get the ssh deploy key'

    - script: |
        mkdir ~/.ssh && mv $(deploy_key.secureFilePath) ~/.ssh/id_rsa
        chmod 700 ~/.ssh && chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
      displayName: 'Install ssh key'

    - script: |
        python update_serverfiles.py
        python prepare_serverfiles.py

    - script: |
        git config --local user.name "jakakokosar"
        git config --local user.email "jaka.kokosar@gmail.com"
        git checkout -b $(date +"%Y/%m/%d")
        git status --long --verbose
        git add .
        git commit -m "Serverfiles update $(date +%Y/%m/%d)"
      displayName: 'Commit updated files'

    - script: |
        export GITHUB_TOKEN=$(github.access)
        git remote set-url origin git@github.com:JakaKokosar/bioinformatics-serverfiles.git
        hub pull-request --push --no-edit --message "$(date +%Y/%m/%d) - Serverfiles update"
        sudo rm ~/.ssh/id_rsa
      condition: |
        and(not(eq(variables['Build.Reason'], 'PullRequest')),
           eq(variables['Build.SourceBranch'], 'refs/heads/master'))
      displayName: 'Create Pull Request'

    - task: CopyFiles@2
      condition: eq(variables['Agent.JobStatus'], 'Succeeded')
      inputs:
        contents: serverfiles_dump.tar.gz
        targetFolder: $(Build.ArtifactStagingDirectory)

    - task: PublishBuildArtifacts@1
      condition: eq(variables['Agent.JobStatus'], 'Succeeded')
      inputs:
        pathtoPublish: $(Build.ArtifactStagingDirectory)
